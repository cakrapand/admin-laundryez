generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model UserCredential {
  id          String       @id @default(uuid())
  email       String       @unique
  password    String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now())
  orders      Order[]
  userProfile UserProfile?
}

model UserProfile {
  id               String         @id @default(uuid())
  userCredentialId String         @unique
  name             String
  address          String
  phone            String
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @default(now())
  userCredential   UserCredential @relation(fields: [userCredentialId], references: [id])
}

model Admin {
  id           String   @id @default(uuid())
  username     String   @unique
  password     String
  name         String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
  isSuperAdmin Boolean  @default(false)
}

model Service {
  id        String   @id @default(uuid())
  name      String   @unique
  price     Float
  duration  Float
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  Order     Order[]
}

model Order {
  id               String         @id @default(uuid())
  userCredentialId String
  serviceId        String
  quantity         Float
  redirectUrl      String         @unique
  orderStatus      OrderStatus    @default(PAYMENT)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @default(now())
  service          Service        @relation(fields: [serviceId], references: [id])
  userCredential   UserCredential @relation(fields: [userCredentialId], references: [id])
  transcation      Transaction?
}

model Transaction {
  id                String            @id @default(uuid())
  orderId           String            @unique
  amount            Float
  transactionStatus TransactionStatus @default(PENDING)
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @default(now())
  order             Order             @relation(fields: [orderId], references: [id])
}

enum OrderStatus {
  PAYMENT
  PICKED_UP
  ON_PROGRESS
  ON_DELIVER
  DONE
  CANCEL
}

enum TransactionStatus {
  PENDING
  FAILURE
  SUCCESS
}
